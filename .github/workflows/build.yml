name: Build MiniDJ
on:
  push:
    tags: ['v*.*.*']
  workflow_dispatch: {}

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        python-version: ['3.10']
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install --upgrade pip
      - run: pip install -r requirements.txt pyinstaller

    
      - name: Build (macOS onefile)
        if: runner.os == 'macOS'
        run: |
          python -m PyInstaller src/main.py --onefile --windowed \
            --name MiniDJ \
            --add-data "images/*:images" \
            --hidden-import mediapipe --hidden-import cv2 --hidden-import rtmidi

     
      - name: Build (Windows onefile)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          python -m PyInstaller src/main.py --onefile --noconsole \
            --name MiniDJ \
            --add-data "images/*;images" \
            --hidden-import mediapipe --hidden-import cv2 --hidden-import rtmidi

      - uses: actions/upload-artifact@v4
        with:
          name: MiniDJ-${{ runner.os }}
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
